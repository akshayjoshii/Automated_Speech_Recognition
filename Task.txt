Hi Akshay,

Thank you very much for your application and interest in the position. 

Given your suitable background, we decided to invite you to participate in our programming task. This task is very similar to the tasks that are usually required in this HiWi position, 
hence this will give you the opportunity to assess whether or not you have a keen interest in the research we do. 

In the attachment, you will find a ZIP file which consists of a .tsv file. The .tsv file contains phoneme vectors, or phoneme embeddings, 
that were obtained from a neural model of grapheme-to-phoneme (g2p) conversion. Each line in the file is a phoneme embedding, where the first entry in each line is the phoneme symbol in IPA, 
the rest of the 236 entries in each line are real-value numbers that represent the corresponding 236-dimensional vector. 

Your task includes the following (sub)tasks
1.	Reading the .tsv into a suitable data structure (e.g., Pandas data frame, Python dictionary, Numpy array, etc.)
2.	Computing the pair-wise cosine similarity between the phonemes represented by the embeddings and obtaining a confusion matrix of similarity scores. 
3.	Exploring the embeddings space with at least two techniques. We recommend using dimensionality reduction and visualization (e.g., PCA, t-SNE), as well as a hierarchical cluster analysis to obtain a dendrogram. 
4.	Writing a 2-3 page report, including the 2 figures, presenting your solution and summarizing your findings. We expect that you would attempt to answer and discuss the question: What do the embeddings really represent? do similarly sounding phonemes have similar embeddings? 

We are aware that this task is interdisciplinary in nature and we don't expect the candidate to know everything, but we encourage you to submit your solution and discuss the difficulties you have encountered in your report. We also encourage you to conduct a small research on phoneme embeddings before you start solving the problem. 

Please send us your code + report in a ZIP file before September 5th, 15:00 CET. You could also send us the code and the report together as a Python notebook.
